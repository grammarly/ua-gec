Останнім часом дедалі більшої популярності набувають прилади інтернету речей (IoT). Однією із головних галузей {їх=>їхнього:::error_type=G/Other} використання є автоматизація або віддалене керування певними процесами у житлових приміщеннях.{  => :::error_type=Punctuation}Найголовнішою особливістю пристроїв, які можна віднести до категорії IoT, є наявність у них доступу до глобальної мережі. Це відкриває цілу низку можливостей {по=>з:::error_type=G/Prep} {керуванню=>керування:::error_type=G/Case} ними.{  => :::error_type=Punctuation}Для отримання доступу до мережі Інтернет у пристроях IoT зазвичай {використовується=>використовують:::error_type=G/VerbVoice} з’єднання по протоколу Wi-Fi. Причиною цього є наявність WiFi точки доступу майже у будь-якій оселі. В той же час, використання Wi-Fi {–=>—:::error_type=Punctuation} з’єднання додає складностей при проєктуванні пристроїв. Причиною цього є висока вартість мікропроцесорів, достатньо потужних для забезпечення Wi-Fi {–=>—:::error_type=Punctuation} з’єднання у порівнянні зі звичайними мікроконтролерами{,=>:::error_type=Punctuation} та {їх=>їхнім:::error_type=G/Other} {високе=>високим:::error_type=G/Case} {енергоспоживання=>енергоспоживанням:::error_type=G/Case}.

Одним із популярних рішень для керування пристроями IoT є OpenWRT.{  => :::error_type=Punctuation}OpenWRT {–=>—:::error_type=Punctuation} це операційна система (ОС), побудована на основі ядра Linux, {щонабула=>що набула:::error_type=Spelling} широкого розповсюдження у вбудованих системах із доступом до Інтернету, а особливо у мережевих пристроях (комутаторах, маршрутизаторах).{  => :::error_type=Punctuation}Вона включає стандартний для Linux {–=>—:::error_type=Punctuation} подібних {=>до :::error_type=G/Prep}ОС набір програм util-linux, що дозволяє працювати із нею користувачу, який має досвід роботи з іншими Linux {–=>—:::error_type=Punctuation} дистрибутивами [1].

Головною перевагою OpenWRT перед звичайними дистрибутивами Linux для вбудованих систем є надзвичайно низькі вимоги до апаратури (швидкодія, об’єм пам’яті, обчислювальні ресурси{,=>:::error_type=Punctuation} тощо), на якій ОС може бути запущена.{  => :::error_type=Punctuation}Існують збірки OpenWRT під платформи із 4 МБ постійної flash {–=>—:::error_type=Punctuation} пам’яті та 32 МБ оперативної RAM. Для функціонування із задовільною швидкодією достатньо процесора з частотою 360 МГц [2]. Вартість найдешевших одноплатних комп’ютерів, здатних запустити OpenWRT та на яких присутня апаратура для роботи із Wi-Fi починається з 7$ [3]. Це набагато нижче, ніж {у=>в:::error_type=Spelling} одноплатних комп'ютерів, {що=>які:::error_type=G/Conjunction} розраховані на звичайні дистрибутиви Linux для вбудованих платформ.

Іншим можливим варіантом забезпечення доступу до мережі Wi-Fi є використання модулів, {що=>які:::error_type=G/Conjunction} працюють без операційної системи, наприклад, популярна серія систем на кристалі ESP8266 [4]. {Їх=>Їхньою:::error_type=G/Other} перевагою є низька вартість [5]. Але, при цьому, розробка програмного забезпечення (ПЗ) для них можлива лише із застосуванням мов С, С++ та низькорівневого програмного інтерфейсу [6].  Програмісту доводиться працювати на рівні{=>,:::error_type=Punctuation} близькому до апаратури, що збільшує вимоги до його кваліфікації та робить процес розробки набагато довшим і дорожчим. Це знижує конкурентні переваги виробу.

При використанні одноплатного комп’ютера під керуванням OpenWRT розробнику стають доступні високорівневі мови програмування: Python, Javascript, Go, Lua, PHP, Ruby та інші [7]. Для цих мов доступні пакети {програмнихбібліотек=>програмних бібліотек:::error_type=Spelling}, що дозволяють реалізовувати необхідний функціонал, певною мірою абстрагуючись від апаратури, на якій програма буде виконуватися. {В=>У:::error_type=Spelling} свою чергу, це дозволяє повторно використовувати вже розроблене ПЗ при зміні апаратної платформи, що значно зменшує вартість розробки пристроїв.

Також OpenWRT надає зручний інтерфейс для створення власних дистрибутивів {–=>—:::error_type=Punctuation} OpenWRT Buildroot. Цей програмний засіб дозволяє за короткий час налаштувати ПЗ, що буде {у=>в:::error_type=Spelling} образі ОС, який розробник отримає після компіляції. Якщо необхідно створити образ ОС для декількох апаратних платформ {–=>—:::error_type=Punctuation} OpenWRT Buildroot автоматично завантажить та встановить набір ПЗ, специфічний для певної архітектури та скомпілює образ. Це також знижує необхідну кваліфікацію інженера і вартість розробки продукту.

{При=>Під час:::error_type=G/Prep} {роботі=>роботи:::error_type=G/Case} зі складними інтерфейсами передачі даних (Wi-Fi, USB, Bluetooth){,=>:::error_type=Punctuation} багато зусиль витрачається на розуміння принципу {їх=>їхньої:::error_type=G/Other} роботи та налаштування доступного апаратного забезпечення. Це займає багато часу та потребує високої кваліфікації програміста. У випадку OpenWRT, розробник має доступ до вже наявних драйверів апаратури інтерфейсів передачі даних. Він може використати програмний інтерфейс для швидкої реалізації необхідного функціоналу.

Більша потужність мікропроцесорів, здатних запускати OpenWRT{=>,:::error_type=Punctuation} дозволяє обробляти великі масиви даних, що недоступно для простіших систем, типу ESP8266. Це дозволяє їм з легкістю виконувати задачі потокової передачі відео в реальному часі{,=>:::error_type=Punctuation} або вести активний обмін даними із сервером та подальшу обробку цих даних на пристрої.

Враховуючи перелічені особливості, використання апаратури із ОС OpenWRT є оптимальним рішенням для контролю пристроїв IoT. Це {дозволяєзнизити=>дозволяє зменшити:::error_type=Spelling} час та вартість розробки продукту, а також дає можливість обробляти великі масиви даних у реальному часі.

При цьому{,=>:::error_type=Punctuation} вартість апаратури, на якій можна запустити OpenWRT, є вищою{,=>:::error_type=Punctuation} у порівнянні із простішими Wi-Fi {–=>—:::error_type=Punctuation} мікроконтролерами. Тому їх використання є виправданим для масових пристроїв користувацької електроніки, для яких якнайнижча ціна є критичним фактором. При цьому використання довшого та дорожчого процесу проєктування є виправданим{=>.:::error_type=Punctuation}
