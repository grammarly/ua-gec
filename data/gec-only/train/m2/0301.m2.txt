S Про анотації типів у Python
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Колись Python був доволі вдало спроектованою мовою і я з задоволенням на ньому писав .
A 5 6|||Spelling|||спроєктованою|||REQUIRED|||-NONE-|||1
A 7 7|||Punctuation|||,|||REQUIRED|||-NONE-|||1
A 9 10|||Spelling|||із|||REQUIRED|||-NONE-|||1

S Потім , десь починаючи з Python 2 . 5 , мова почала скурвлюватися .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Зрештою , я майже перестав її використовувати : змінився і характер розробок , і кращі альтернативи .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Але краєм ока я за ним спостерігаю і навіть , інколи , щось пописую .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Ось недавно у мене і стався маленький проект під Raspberry Pi і Python там виявився доцільним .
A 7 8|||Spelling|||проєкт|||REQUIRED|||-NONE-|||1

S Заодно , я краєм ока глянув на анотацію типів .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S І побачив шизофренію :
A 3 4|||Punctuation|||.|||REQUIRED|||-NONE-|||1

S А тепер детально , що не так .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Python являється мовою з динамічною типізацією .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Якщо ви пишете скрипт , чи користуєтесь техніками на кшталт DDD , то це в тему .
A 4 5|||Punctuation|||-NONE-|||REQUIRED|||-NONE-|||1

S Але тут є і два основні недоліки : динаміка дорога в плані швидкодії і , що набагато гірше , неочевидна для програміста .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Поки це невеликий скрипт , це не є проблемою , програміст тримає в голові те , що він передає та хоче отримати , але вже на кількох тисячах рядків або командній роботі це починає давати збої і потрібна інформація про типи , як окремий випадок так званих “ контрактів ” .
A 36 36|||Punctuation|||,|||REQUIRED|||-NONE-|||1
A 41 42|||Punctuation|||-NONE-|||REQUIRED|||-NONE-|||1

S Наприклад , “ я передаю число і очікую , що мені повернуть нове число ” .
A 6 7|||Spelling|||й|||REQUIRED|||-NONE-|||1

S Зазвичай контракти реалізуються на основі статичної типізації , коли вказується тип параметрів і значення , що повертається .
A 15 16|||G/Conjunction|||яке|||REQUIRED|||-NONE-|||1

S Це я і спробував зробити у typed_twice ( ) .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S У мовах типу Lisp , SmallTalk чи Erlang програміст працює з так званим о́бразом програми і його текстовий редактор бере звідти дані про типи , структуру , зміни в ній , тощо .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Оскільки Python є скриптовою мовою , він не створює такого о́браза , а кожного разу читає , а потім виконує код програми .
A 10 11|||G/Case|||о́бразу|||REQUIRED|||-NONE-|||1

S Отже , йому нема звідки знати , які типи використовуються , тому залишається тільки статичний аналіз .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Але Python — мова з динамічною типізацією .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Так от , анотації типів і є спробою ввести статику , але не скасовувати динаміку .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Я спочатку подумав , що я чогось не розумію , тому звернувся до документації :
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Це виявилося спробою всидіти на двох стільцях .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Тобто вони , в МІНОРНІЙ гілці , поламали сумісність ! і свідомо пішли на порушення контракту просто заради того , щоб ДОПОМОГТИ ТЕКСТОВОМУ РЕДАКТОРУ !
A 9 9|||Punctuation|||(|||REQUIRED|||-NONE-|||1
A 10 10|||Punctuation|||)|||REQUIRED|||-NONE-|||1

S Це те саме , що штовхати справну автівку , щоб їй було легше !
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S Казкові , просто казкові люди !
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S З іншої сторони , якщо ти розумієш необхідність статичної типізації , краще взяти щось статичне , наприклад Java , C # , Go чи Swift , а не цю пародію на Java .
A 17 17|||Punctuation|||,|||REQUIRED|||-NONE-|||1

S Тим більше , що у Java завезли приємне виведення типів .
A -1 -1|||noop|||-NONE-|||-NONE-|||-NONE-|||1

S А якщо дуже хочеться , то це все можна було зробити , не засмічуючи мову , і не ламаючи сумісність на декораторах , десь так :
A 15 16|||Punctuation|||-NONE-|||REQUIRED|||-NONE-|||1
A 25 26|||Punctuation|||.|||REQUIRED|||-NONE-|||1

